plugins {
	id 'org.springframework.boot' version '2.6.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "6.2.2"
	id "com.diffplug.gradle.spotless" version "4.5.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

spotless {
	java {
		googleJavaFormat('1.8')
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc:8.4.1.jre8'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
	implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    // https://mvnrepository.com/artifact/joda-time/joda-time
	implementation 'joda-time:joda-time:2.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.11.2'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.2'
	implementation'org.assertj:assertj-db:1.2.0'
// https://mvnrepository.com/artifact/com.github.springtestdbunit/spring-test-dbunit
	testImplementation group: 'com.github.springtestdbunit', name: 'spring-test-dbunit', version: '1.1.0'
// https://mvnrepository.com/artifact/org.dbunit/dbunit
	testImplementation group: 'org.dbunit', name: 'dbunit', version: '2.6.0'



}

test {
	useJUnitPlatform()
}

task composeUp(type: Exec) {
	commandLine "docker-compose", "up", "-d"
}

task createDb(type: Exec) {
	def q = "CREATE DATABASE ${db_name};"
	commandLine "docker", "exec", "-i", db_container, "/opt/mssql-tools/bin/sqlcmd", "-U", db_user, "-P", db_password, "-Q", "$q"
}

flyway {
	url = 'jdbc:sqlserver://localhost:1433;databaseName=test;loginTimeout=30;socketTimeout=30000'
	user = db_user
	password = db_password
}